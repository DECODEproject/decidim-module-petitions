---

version: 2

jobs:
  build:
    docker:
      - image: decidim/decidim@sha256:348fb1faa49cfe76ba7cbeafc67ca09002cf95f0ffa7a76eefa9d5b3774e0ee9
        environment:
          RAILS_ENV: test
          TEST_REPORT_PATH: "test/reports"
          SIMPLECOV: true
          DATABASE_USERNAME: postgres

      - image: postgres
        environment:
          POSTGRES_USER: postgres

    working_directory: /app

    steps:
      - checkout

      - run:
          name: Configure bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - restore_cache:
          keys:
            - bundler-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install dependencies
          command: bundle install --path vendor/bundle

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - save_cache:
          key: bundler-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Generate test app
          command: bundle exec rake test_app

      - run:
          name: Run RSpec tests
          command: bundle exec rspec

      - run:
          name: Convert Codeclimate coverage
          command: ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.$CIRCLE_JOB.json coverage/.resultset.json 

      - run:
          name: Upload CodeClimate test coverage
          command: ./cc-test-reporter upload-coverage -i coverage/codeclimate.$CIRCLE_JOB.json
